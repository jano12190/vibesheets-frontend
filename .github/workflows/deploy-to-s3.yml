name: Deploy Frontend to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    - name: Deploy Frontend to S3
      run: |
        # Sync HTML files with proper content type
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --delete \
          --exclude ".git/*" \
          --exclude ".github/*" \
          --exclude "*.css" \
          --exclude "*.js" \
          --exclude "*.png" \
          --exclude "*.jpg" \
          --exclude "*.jpeg" \
          --exclude "*.gif" \
          --exclude "*.svg" \
          --exclude "*.ico" \
          --exclude "README.md" \
          --exclude "*.md" \
          --content-type "text/html"
        
        # Sync CSS files with proper content type
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.css" \
          --content-type "text/css"
        
        # Sync JS files with proper content type
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.js" \
          --content-type "application/javascript"
        
        # Sync image files with proper content types
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.png" \
          --content-type "image/png"
        
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.jpg" \
          --include "*.jpeg" \
          --content-type "image/jpeg"
        
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.gif" \
          --content-type "image/gif"
        
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.svg" \
          --content-type "image/svg+xml"
        
        aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --exclude "*" \
          --include "*.ico" \
          --content-type "image/x-icon"
        
        # Set cache control for static assets (1 year)
        aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --recursive \
          --exclude "*" \
          --include "*.css" \
          --include "*.js" \
          --include "*.png" \
          --include "*.jpg" \
          --include "*.jpeg" \
          --include "*.gif" \
          --include "*.svg" \
          --include "*.ico" \
          --include "*.woff" \
          --include "*.woff2" \
          --metadata-directive REPLACE \
          --cache-control "max-age=31536000"
        
        # Set cache control for HTML files (5 minutes)
        aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --recursive \
          --exclude "*" \
          --include "*.html" \
          --metadata-directive REPLACE \
          --cache-control "max-age=300"
    
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
        
    - name: Wait for invalidation to complete
      run: |
        echo "Waiting for CloudFront invalidation to complete..."
        INVALIDATION_ID=$(aws cloudfront list-invalidations \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --query 'InvalidationList.Items[0].Id' \
          --output text)
        
        aws cloudfront wait invalidation-completed \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --id $INVALIDATION_ID
        
        echo "CloudFront invalidation completed!"